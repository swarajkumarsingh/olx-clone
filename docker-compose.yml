version: "3.9"

services:
  redis:
    build: ./redis/.
    container_name: redis_container
    ports:
      - 6379:6379
    restart: on-failure
    volumes:
      - .cache:/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    restart: on-failure
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - 3000:3000
    restart: on-failure
    volumes:
      - grafana-storage:/var/lib/grafana

    # Pgadmin Image
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    hostname: localhost
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      GUNICORN_ACCESS_LOGFILE: "/dev/null"
    volumes:
      - ./pgadmin-servers.json:/pgadmin4/servers.json
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "3030:80"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres_container
    image: postgres:13.5
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: olx_clone
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  golang:
    container_name: golang_container
    build:
      dockerfile: Dockerfile.local
    environment:
      - STAGE=${STAGE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
      - DD_AGENT_HOST=${DD_AGENT_HOST}
      - S3_BUCKET=${S3_BUCKET}
    ports:
      - 8080:8080
    restart: on-failure
    depends_on:
      - redis
      - grafana
      - postgres
      - prometheus
    # For Dockerfile.Local only
    volumes:
      - ./:/app

volumes:
  redis: {}
  grafana-storage: {}
  db:
    driver: local
